{"ast":null,"code":"var _jsxFileName = \"/home/samyrr1/Advanced/JobZ/jobz/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport data from './assets/data.json';\nimport JobBoardComponent from './components/JobBoardComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [jobs, setJobs] = useState([]);\n  const [filters, setFilters] = useState(['CSS']);\n  useEffect(() => setJobs(data), []);\n\n  const filterFunction = ({\n    role,\n    level,\n    tools,\n    languages\n  }) => {\n    if (filters.length === 0) {\n      return true;\n    }\n\n    const tags = [role, level];\n\n    if (tools) {\n      tags.push(...tools);\n    }\n\n    if (languages) {\n      tags.push(...languages);\n    }\n\n    return tags.some(tag => filters.includes(tag));\n  };\n\n  const handleTagClick = tag => {\n    setFilters([...filters, tag]);\n  };\n\n  const handleFilterClick = passedFilter => {\n    setFilters(filters.filter(f => f !== passedFilter));\n  };\n\n  const filteredJobs = jobs.filter(filterFunction);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-red-300 mb-12\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/bg-header-desktop.svg\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex bg-white shadow-md \n          my-16 mx-10 p-6 rounded`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow-md\",\n      children: filters.length > 0 && filters.map(filter => /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => handleFilterClick(filter),\n        className: \"text-pink-700  bg-pink-100 font-bold mr-4  mb-4 p-2 rounded sm:mb-0\",\n        children: filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), jobs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Jobs are fetching...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : filteredJobs.map(job => /*#__PURE__*/_jsxDEV(JobBoardComponent, {\n      job: job,\n      handleTagClick: handleTagClick\n    }, job.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vvdcH7j941hpgdg7KjNRCf1YcQo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/samyrr1/Advanced/JobZ/jobz/src/App.js"],"names":["React","useState","useEffect","data","JobBoardComponent","App","jobs","setJobs","filters","setFilters","filterFunction","role","level","tools","languages","length","tags","push","some","tag","includes","handleTagClick","handleFilterClick","passedFilter","filter","f","filteredJobs","map","job","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAuBR,QAAQ,CAAC,CAAC,KAAD,CAAD,CAArC;AAEAC,EAAAA,SAAS,CAAC,MAAMK,OAAO,CAACJ,IAAD,CAAd,EAAsB,EAAtB,CAAT;;AAEA,QAAMO,cAAc,GAAG,CAAC;AAACC,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA;AAArB,GAAD,KAAqC;AAC1D,QAAIN,OAAO,CAACO,MAAR,KAAmB,CAAvB,EAA0B;AACxB,aAAO,IAAP;AACD;;AAED,UAAMC,IAAI,GAAG,CAACL,IAAD,EAAOC,KAAP,CAAb;;AAEA,QAAIC,KAAJ,EAAW;AACTG,MAAAA,IAAI,CAACC,IAAL,CAAU,GAAGJ,KAAb;AACD;;AAED,QAAIC,SAAJ,EAAe;AACbE,MAAAA,IAAI,CAACC,IAAL,CAAU,GAAGH,SAAb;AACD;;AACD,WAAOE,IAAI,CAACE,IAAL,CAAUC,GAAG,IAAIX,OAAO,CAACY,QAAR,CAAiBD,GAAjB,CAAjB,CAAP;AACD,GAfD;;AAiBA,QAAME,cAAc,GAAIF,GAAD,IAAS;AAC9BV,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAaW,GAAb,CAAD,CAAV;AACD,GAFD;;AAIA,QAAMG,iBAAiB,GAAIC,YAAD,IAAkB;AAC1Cd,IAAAA,UAAU,CAACD,OAAO,CAACgB,MAAR,CAAgBC,CAAD,IAAOA,CAAC,KAClCF,YADW,CAAD,CAAV;AAED,GAHD;;AAKA,QAAMG,YAAY,GAAGpB,IAAI,CAACkB,MAAL,CAAYd,cAAZ,CAArB;AAGA,sBAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEE;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAA,6BACE;AAAK,QAAA,GAAG,EAAC,+BAAT;AAAyC,QAAA,GAAG,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AACI,MAAA,SAAS,EAAG;AACtB;AAFM;AAAA;AAAA;AAAA;AAAA,YANF,eAWE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,gBACGF,OAAO,CAACO,MAAR,GAAiB,CAAjB,IAAsBP,OAAO,CAACmB,GAAR,CAAaH,MAAD,iBACjC;AACE,QAAA,OAAO,EAAE,MACTF,iBAAiB,CAACE,MAAD,CAFnB;AAGE,QAAA,SAAS,EAAC,qEAHZ;AAAA,kBAMGA;AANH;AAAA;AAAA;AAAA;AAAA,cADqB;AADzB;AAAA;AAAA;AAAA;AAAA,YAXF,EAwBGlB,IAAI,CAACS,MAAL,KAAgB,CAAhB,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,GAGCW,YAAY,CAACC,GAAb,CAAkBC,GAAD,iBACf,QAAC,iBAAD;AACE,MAAA,GAAG,EAAEA,GADP;AAGE,MAAA,cAAc,EAAEP;AAHlB,OAEOO,GAAG,CAACC,EAFX;AAAA;AAAA;AAAA;AAAA,YADF,CA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAuCD;;GA1EQxB,G;;KAAAA,G;AA4ET,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport data from './assets/data.json';\nimport JobBoardComponent from './components/JobBoardComponent';\n\n\nfunction App() {\n  const [jobs, setJobs] = useState([]);\n  const [filters, setFilters] =useState(['CSS']);\n\n  useEffect(() => setJobs(data), []);\n\n  const filterFunction = ({role, level, tools, languages}) => {\n    if (filters.length === 0) {\n      return true;\n    }\n\n    const tags = [role, level];\n\n    if (tools) {\n      tags.push(...tools);\n    }\n\n    if (languages) {\n      tags.push(...languages);\n    }\n    return tags.some(tag => filters.includes(tag));\n  };\n\n  const handleTagClick = (tag) => {\n    setFilters([...filters, tag]);\n  }\n  \n  const handleFilterClick = (passedFilter) => {\n    setFilters(filters.filter((f) => f !==\n    passedFilter));\n  };\n\n  const filteredJobs = jobs.filter(filterFunction);\n\n  \n  return (\n\n    <div className=\"App\">\n\n      <header className='bg-red-300 mb-12'>\n        <img src='/images/bg-header-desktop.svg' alt='' />\n      </header>\n\n      <div \n          className={`flex bg-white shadow-md \n          my-16 mx-10 p-6 rounded`}>\n      </div>\n\n      <div className='bg-white shadow-md'>\n        {filters.length > 0 && filters.map((filter) => (\n          <span \n            onClick={() =>\n            handleFilterClick(filter)}\n            className='text-pink-700 \n            bg-pink-100 font-bold mr-4 \n            mb-4 p-2 rounded sm:mb-0'>\n            {filter}\n          </span>\n        ))}\n      </div>\n\n      {jobs.length === 0 ? (\n        <p>Jobs are fetching...</p>\n      ) : (\n        filteredJobs.map((job) => (\n          <JobBoardComponent \n            job={job} \n            key={job.id}\n            handleTagClick={handleTagClick} \n          />\n        ))\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}