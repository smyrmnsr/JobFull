{"ast":null,"code":"var _jsxFileName = \"/home/samyrr1/Advanced/JobZ/jobz/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport data from './assets/data.json';\nimport JobBoardComponent from './components/JobBoardComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [jobs, setJobs] = useState([]);\n  const [filters, setFilters] = useState([]);\n  useEffect(() => setJobs(data), []);\n\n  const filterFunction = ({\n    role,\n    level,\n    tools,\n    languages\n  }) => {\n    if (filters.length === 0) {\n      return true;\n    }\n\n    const tags = [role, level];\n\n    if (tools) {\n      tags.push(...tools);\n    }\n\n    if (languages) {\n      tags.push(...languages);\n    }\n\n    return tags.some(tag => filters.includes(tag));\n  };\n\n  const handleTagClick = tag => {\n    if (filters.includes(tag)) return;\n    setFilters([...filters, tag]);\n  };\n\n  const handleFilterClick = passedFilter => {\n    setFilters(filters.filter(f => f !== passedFilter));\n  };\n\n  const filteredJobs = jobs.filter(filterFunction);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-purple-100\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"offscreen\",\n        src: \"/images/Live-Background.svg\",\n        width: \"1920\",\n        height: \"350\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), filters.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex bg-white shadow-md \n          my-16 mx-10 p-6 rounded`,\n      children: filters.map(filter => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"cursor-pointer mr-4 mb-4 rounded font-bold text-blue-500 bg-blue-100\",\n        onClick: () => handleFilterClick(filter),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-red-400 bg-pink-100 p-2\",\n          children: filter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"bg-red-500 text-pink-100 p-2 text-2xl \",\n          children: \" x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), jobs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Jobs are fetching...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : filteredJobs.map(job => /*#__PURE__*/_jsxDEV(JobBoardComponent, {\n      job: job,\n      handleTagClick: handleTagClick\n    }, job.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"T1bJ6+v8uLWs7HpQF8UGJcCOzGE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/samyrr1/Advanced/JobZ/jobz/src/App.js"],"names":["React","useState","useEffect","data","JobBoardComponent","App","jobs","setJobs","filters","setFilters","filterFunction","role","level","tools","languages","length","tags","push","some","tag","includes","handleTagClick","handleFilterClick","passedFilter","filter","f","filteredJobs","map","job","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAuBR,QAAQ,CAAC,EAAD,CAArC;AAEAC,EAAAA,SAAS,CAAC,MAAMK,OAAO,CAACJ,IAAD,CAAd,EAAsB,EAAtB,CAAT;;AAEA,QAAMO,cAAc,GAAG,CAAC;AAACC,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA;AAArB,GAAD,KAAqC;AAC1D,QAAIN,OAAO,CAACO,MAAR,KAAmB,CAAvB,EAA0B;AACxB,aAAO,IAAP;AACD;;AAED,UAAMC,IAAI,GAAG,CAACL,IAAD,EAAOC,KAAP,CAAb;;AAEA,QAAIC,KAAJ,EAAW;AACTG,MAAAA,IAAI,CAACC,IAAL,CAAU,GAAGJ,KAAb;AACD;;AAED,QAAIC,SAAJ,EAAe;AACbE,MAAAA,IAAI,CAACC,IAAL,CAAU,GAAGH,SAAb;AACD;;AACD,WAAOE,IAAI,CAACE,IAAL,CAAUC,GAAG,IAAIX,OAAO,CAACY,QAAR,CAAiBD,GAAjB,CAAjB,CAAP;AACD,GAfD;;AAiBA,QAAME,cAAc,GAAIF,GAAD,IAAS;AAC9B,QAAIX,OAAO,CAACY,QAAR,CAAiBD,GAAjB,CAAJ,EAA2B;AAE3BV,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAaW,GAAb,CAAD,CAAV;AACD,GAJD;;AAMA,QAAMG,iBAAiB,GAAIC,YAAD,IAAkB;AAC1Cd,IAAAA,UAAU,CAACD,OAAO,CAACgB,MAAR,CAAgBC,CAAD,IAAOA,CAAC,KAClCF,YADW,CAAD,CAAV;AAED,GAHD;;AAKA,QAAMG,YAAY,GAAGpB,IAAI,CAACkB,MAAL,CAAYd,cAAZ,CAArB;AAGA,sBAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEE;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,GAAG,EAAC,6BAA/B;AAA6D,QAAA,KAAK,EAAC,MAAnE;AAA2E,QAAA,MAAM,EAAC,KAAlF;AAAwF,QAAA,GAAG,EAAC;AAA5F;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,EAMGF,OAAO,CAACO,MAAR,GAAiB,CAAjB,iBACC;AAAK,MAAA,SAAS,EAAG;AACzB,kCADQ;AAAA,gBAEGP,OAAO,CAACmB,GAAR,CAAaH,MAAD,iBACX;AACE,QAAA,SAAS,EAAC,sEADZ;AAIE,QAAA,OAAO,EAAE,MACTF,iBAAiB,CAACE,MAAD,CALnB;AAAA,gCAME;AACA,UAAA,SAAS,EAAC,8BADV;AAAA,oBAEkBA;AAFlB;AAAA;AAAA;AAAA;AAAA,gBANF,eAUE;AAAM,UAAA,SAAS,EAAC,wCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AAFH;AAAA;AAAA;AAAA;AAAA,YAPJ,EA6BGlB,IAAI,CAACS,MAAL,KAAgB,CAAhB,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,GAGCW,YAAY,CAACC,GAAb,CAAkBC,GAAD,iBACf,QAAC,iBAAD;AACE,MAAA,GAAG,EAAEA,GADP;AAGE,MAAA,cAAc,EAAEP;AAHlB,OAEOO,GAAG,CAACC,EAFX;AAAA;AAAA;AAAA;AAAA,YADF,CAhCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AA4CD;;GAjFQxB,G;;KAAAA,G;AAmFT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport data from './assets/data.json';\nimport JobBoardComponent from './components/JobBoardComponent';\n\n\nfunction App() {\n  const [jobs, setJobs] = useState([]);\n  const [filters, setFilters] =useState([]);\n\n  useEffect(() => setJobs(data), []);\n\n  const filterFunction = ({role, level, tools, languages}) => {\n    if (filters.length === 0) {\n      return true;\n    }\n\n    const tags = [role, level];\n\n    if (tools) {\n      tags.push(...tools);\n    }\n\n    if (languages) {\n      tags.push(...languages);\n    }\n    return tags.some(tag => filters.includes(tag));\n  };\n\n  const handleTagClick = (tag) => {\n    if (filters.includes(tag)) return;\n\n    setFilters([...filters, tag]);\n  }\n  \n  const handleFilterClick = (passedFilter) => {\n    setFilters(filters.filter((f) => f !==\n    passedFilter));\n  };\n\n  const filteredJobs = jobs.filter(filterFunction);\n\n  \n  return (\n\n    <div className=\"App\">\n\n      <header className='bg-purple-100'>\n        <img className='offscreen' src='/images/Live-Background.svg' width=\"1920\"  height='350' alt='' />\n      </header> \n\n      {filters.length > 0 && (\n        <div className={`flex bg-white shadow-md \n          my-16 mx-10 p-6 rounded`}>\n          {filters.map((filter) => (\n            <span \n              className='cursor-pointer\n              mr-4 mb-4 rounded font-bold\n              text-blue-500 bg-blue-100'\n              onClick={() =>\n              handleFilterClick(filter)}>\n              <span\n              className='text-red-400\n              bg-pink-100 p-2'>{filter}\n              </span>\n              <span className='bg-red-500\n              text-pink-100 p-2 text-2xl\n              '> x \n              </span>\n            </span>\n          ))}\n        </div>\n      )}\n\n      {jobs.length === 0 ? (\n        <p>Jobs are fetching...</p>\n      ) : (\n        filteredJobs.map((job) => (\n          <JobBoardComponent \n            job={job} \n            key={job.id}\n            handleTagClick={handleTagClick} \n          />\n        ))\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}